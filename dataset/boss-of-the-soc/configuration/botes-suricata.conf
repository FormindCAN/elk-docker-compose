input {
  file {
    mode => "read"
    type => "json"
    codec => "json"
    path => "/usr/share/logstash/ingest_data/*suricata.json"
  }  
}

filter { 
mutate {
		rename => ["flow.bytes_toclient", "destination.bytes"]
		rename => ["in_iface", "botes.destination.interface"]
		rename => ["dest_ip", "destination.ip"]
		rename => ["flow.pkts_toclient", "destination.packets"]
		rename => ["dest_port", "destination.port"]
		rename => ["answer", "dns.answers.data"]
		rename => ["dns.rcode", "dns.response_code"]
		rename => ["dns.type", "dns.type"]
		rename => ["dns.rdata", "dns.answers.data"]
		rename => ["dns.rrname", "dns.answers.name"]
		rename => ["dns.rrtype", "dns.answers.type"]
		rename => ["dns.id", "dns.id"]
		rename => ["dns.ttl", "dns.answers.ttl"]
		rename => ["alert.category", "event.category"]
		rename => ["event_type", "event.category"]
		rename => ["eventtype", "event.category"]
		rename => ["time", "event.created"]
		rename => ["message", "event.original"]
		rename => ["alert.action", "event.outcome"]
		rename => ["alert.severity", "event.severity"]
		rename => ["date_zone", "event.timezone"]
		rename => ["fileinfo.filename", "file.path"]
		rename => ["fileinfo.size", "file.size"]
		rename => ["http.http_content_type", "botes.http.response.content_type"]
		rename => ["http.redirect", "botes.http.redirect.url"]
		rename => ["http.http_method", "http.request.method"]
		rename => ["http.http_refer", "http.request.referrer"]
		rename => ["http.length", "botes.http.response.content_length"]
		rename => ["http.status", "http.response.status_code"]
		rename => ["http.protocol", "http.version"]
		rename => ["botes.http.xff", "botes.http.xff"]
		rename => ["icmp_code", "icmp.code.id"]
		rename => ["icmp_type", "icmp.type.id"]
		rename => ["app_proto", "network.protocol"]
		rename => ["flow.age", "botes.network.session.duration"]
		rename => ["flow.end", "botes.network.session.end"]
		rename => ["flow_id", "botes.network.session.id"]
		rename => ["flow.reason", "botes.network.session.reason"]
		rename => ["flow.start", "botes.network.session.start"]
		rename => ["flow.state", "botes.network.session.state"]
		rename => ["proto", "network.transport"]
		rename => ["alert.signature_id", "threat.attack.id"]
		rename => ["fileinfo.state", "threat.file.state"]
		rename => ["fileinfo.stored", "threat.file.stored"]
		rename => ["host", "observer.hostname"]
		rename => ["ids_type", "botes.observer.ids.type"]
		rename => ["alert.gid", "threat.signature.gid"]
		rename => ["alert.signature", "threat.signature.name"]
		rename => ["alert.rev", "threat.signature.revision"]
		rename => ["product", "observer.type"]
		rename => ["vendor", "observer.vendor"]
		rename => ["flow.bytes_toserver", "source.bytes"]
		rename => ["flow.pkts_toserver", "source.bytes"]
		rename => ["src_ip", "source.ip"]
		rename => ["src_port", "source.port"]
		rename => ["ssh.client.software_version", "ssh.client.software"]
		rename => ["ssh.client.proto_version", "ssh.client.version"]
		rename => ["ssh.server.software_version", "ssh.server.software"]
		rename => ["ssh.server.proto_version", "ssh.server.version"]
		rename => ["stats.capture.kernel_drops", "suricata.eve.stats.capture.kernel_drops"]
		rename => ["stats.capture.kernel_packets", "suricata.eve.stats.capture.kernel_packets"]
		rename => ["stats.decoder.avg_pkt_size", "suricata.eve.stats.decoder.avg_pkt_size"]
		rename => ["stats.decoder.bytes", "suricata.eve.stats.decoder.bytes"]
		rename => ["stats.decoder.erspan", "suricata.eve.stats.decoder.erspan"]
		rename => ["stats.decoder.ethernet", "suricata.eve.stats.decoder.ethernet"]
		rename => ["stats.decoder.gre", "suricata.eve.stats.decoder.gre"]
		rename => ["stats.decoder.icmpv4", "suricata.eve.stats.decoder.icmpv4"]
		rename => ["stats.decoder.icmpv6", "suricata.eve.stats.decoder.icmpv6"]
		rename => ["stats.decoder.invalid", "suricata.eve.stats.decoder.invalid"]
		rename => ["stats.decoder.ipraw.invalid_ip_version", "suricata.eve.stats.decoder.ipraw.invalid_ip_version"]
		rename => ["stats.decoder.ipv4", "suricata.eve.stats.decoder.ipv4"]
		rename => ["stats.decoder.ipv4_in_ipv6", "suricata.eve.stats.decoder.ipv4_in_ipv6"]
		rename => ["stats.decoder.ipv6", "suricata.eve.stats.decoder.ipv6"]
		rename => ["stats.decoder.ipv6_in_ipv6", "suricata.eve.stats.decoder.ipv6_in_ipv6"]
		rename => ["stats.decoder.ltnull.pkt_too_small", "suricata.eve.stats.decoder.ltnull.pkt_too_small"]
		rename => ["stats.decoder.ltnull.unsupported_type", "suricata.eve.stats.decoder.ltnull.unsupported_type"]
		rename => ["stats.decoder.max_pkt_size", "suricata.eve.stats.decoder.max_pkt_size"]
		rename => ["stats.decoder.mpls", "suricata.eve.stats.decoder.mpls"]
		rename => ["stats.decoder.null", "suricata.eve.stats.decoder.null"]
		rename => ["stats.decoder.pkts", "suricata.eve.stats.decoder.pkts"]
		rename => ["stats.decoder.ppp", "suricata.eve.stats.decoder.ppp"]
		rename => ["stats.decoder.pppoe", "suricata.eve.stats.decoder.pppoe"]
		rename => ["stats.decoder.raw", "suricata.eve.stats.decoder.raw"]
		rename => ["stats.decoder.sctp", "suricata.eve.stats.decoder.sctp"]
		rename => ["stats.decoder.sll", "suricata.eve.stats.decoder.sll"]
		rename => ["stats.decoder.tcp", "suricata.eve.stats.decoder.tcp"]
		rename => ["stats.decoder.teredo", "suricata.eve.stats.decoder.teredo"]
		rename => ["stats.decoder.udp", "suricata.eve.stats.decoder.udp"]
		rename => ["stats.decoder.vlan", "suricata.eve.stats.decoder.vlan"]
		rename => ["stats.decoder.vlan_qinq", "suricata.eve.stats.decoder.vlan_qinq"]
		rename => ["stats.defrag.ipv4.fragments", "suricata.eve.stats.defrag.ipv4.fragments"]
		rename => ["stats.defrag.ipv4.reassembled", "suricata.eve.stats.defrag.ipv4.reassembled"]
		rename => ["stats.defrag.ipv4.timeouts", "suricata.eve.stats.defrag.ipv4.timeouts"]
		rename => ["stats.defrag.ipv6.fragments", "suricata.eve.stats.defrag.ipv6.fragments"]
		rename => ["stats.defrag.ipv6.reassembled", "suricata.eve.stats.defrag.ipv6.reassembled"]
		rename => ["stats.defrag.ipv6.timeouts", "suricata.eve.stats.defrag.ipv6.timeouts"]
		rename => ["stats.defrag.max_frag_hits", "suricata.eve.stats.defrag.max_frag_hits"]
		rename => ["stats.detect.alert", "suricata.eve.stats.detect.alert"]
		rename => ["stats.dns.memcap_global", "suricata.eve.stats.dns.memcap_global"]
		rename => ["stats.dns.memcap_state", "suricata.eve.stats.dns.memcap_state"]
		rename => ["stats.dns.memuse", "suricata.eve.stats.dns.memuse"]
		rename => ["stats.flow.emerg_mode_entered", "suricata.eve.stats.flow.emerg_mode_entered"]
		rename => ["stats.flow.emerg_mode_over", "suricata.eve.stats.flow.emerg_mode_over"]
		rename => ["stats.flow.memcap", "suricata.eve.stats.flow.memcap"]
		rename => ["stats.flow.memuse", "suricata.eve.stats.flow.memuse"]
		rename => ["stats.flow.spare", "suricata.eve.stats.flow.spare"]
		rename => ["stats.flow.tcp_reuse", "suricata.eve.stats.flow.tcp_reuse"]
		rename => ["stats.flow_mgr.closed_pruned", "suricata.eve.stats.flow_mgr.closed_pruned"]
		rename => ["stats.flow_mgr.est_pruned", "suricata.eve.stats.flow_mgr.est_pruned"]
		rename => ["stats.flow_mgr.new_pruned", "suricata.eve.stats.flow_mgr.new_pruned"]
		rename => ["stats.http.memcap", "suricata.eve.stats.http.memcap"]
		rename => ["stats.http.memuse", "suricata.eve.stats.http.memuse"]
		rename => ["stats.stream.3whs_ack_in_wrong_dir", "suricata.eve.stats.stream.3whs_ack_in_wrong_dir"]
		rename => ["stats.stream.3whs_async_wrong_seq", "suricata.eve.stats.stream.3whs_async_wrong_seq"]
		rename => ["stats.stream.3whs_right_seq_wrong_ack_evasion", "suricata.eve.stats.stream.3whs_right_seq_wrong_ack_evasion"]
		rename => ["stats.tcp.invalid_checksum", "suricata.eve.stats.tcp.invalid_checksum"]
		rename => ["stats.tcp.memuse", "suricata.eve.stats.tcp.memuse"]
		rename => ["stats.tcp.no_flow", "suricata.eve.stats.tcp.no_flow"]
		rename => ["stats.tcp.pseudo", "suricata.eve.stats.tcp.pseudo"]
		rename => ["stats.tcp.pseudo_failed", "suricata.eve.stats.tcp.pseudo_failed"]
		rename => ["stats.tcp.reassembly_gap", "suricata.eve.stats.tcp.reassembly_gap"]
		rename => ["stats.tcp.reassembly_memuse", "suricata.eve.stats.tcp.reassembly_memuse"]
		rename => ["stats.tcp.rst", "suricata.eve.stats.tcp.rst"]
		rename => ["stats.tcp.segment_memcap_drop", "suricata.eve.stats.tcp.segment_memcap_drop"]
		rename => ["stats.tcp.sessions", "suricata.eve.stats.tcp.sessions"]
		rename => ["stats.tcp.ssn_memcap_drop", "suricata.eve.stats.tcp.ssn_memcap_drop"]
		rename => ["stats.tcp.stream_depth_reached", "suricata.eve.stats.tcp.stream_depth_reached"]
		rename => ["stats.tcp.syn", "suricata.eve.stats.tcp.syn"]
		rename => ["stats.tcp.synack", "suricata.eve.stats.tcp.synack"]
		rename => ["stats.uptime", "suricata.eve.stats.uptime"]
		rename => ["tcp.ack", "tcp.ack"]
		rename => ["tcp.tcp_flags_ts", "tcp.client.flag.hex"]
		rename => ["tcp_flag_to_server", "tcp.client.flag.name"]
		rename => ["tcp.cwr", "tcp.cwr"]
		rename => ["tcp.ecn", "tcp.ecn"]
		rename => ["tcp.fin", "tcp.fin"]
		rename => ["tcp.tcp_flags", "tcp.flag.hex"]
		rename => ["tcp_flag", "tcp.flag.name"]
		rename => ["tcp.psh", "tcp.psh"]
		rename => ["tcp.rst", "tcp.rst"]
		rename => ["tcp.tcp_flags_tc", "tcp.server.flag.hex"]
		rename => ["tcp_flag_to_client", "tcp.server.flag.name"]
		rename => ["tcp.state", "tcp.state"]
		rename => ["tcp.syn", "tcp.syn"]
		rename => ["tls.fingerprint", "tls.fingerprint.sha1"]
		rename => ["tls.issuerdn", "tls.issuer.dn"]
		rename => ["ssl_issuer_email", "tls.issuer.email"]
		rename => ["ssl_issuer_locality", "tls.issuer.locality"]
		rename => ["ssl_issuer_organization", "tls.issuer.organization"]
		rename => ["ssl_serial", "tls.serial.number"]
		rename => ["tls.sni", "tls.sni"]
		rename => ["tls.subject", "tls.subject.dn"]
		rename => ["ssl_subject_email", "tls.subject.email"]
		rename => ["ssl_subject_locality", "tls.subject.locality"]
		rename => ["ssl_subject_organization", "tls.subject.organization"]
		rename => ["tls.version", "tls.version"]
		rename => ["http.hostname", "url.domain"]
		rename => ["http.url", "url.path"]
		rename => ["http.http_user_agent", "user_agent.original"]
	}
} 

output {  
  elasticsearch {
    index => "botes-suricata-%{+YYYY.MM.dd}"
    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    cacert => "certs/ca/ca.crt"
  } 
}