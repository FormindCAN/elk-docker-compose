input {
  file {
    mode => "read"
    type => "json"
    codec => "json"
    path => "/usr/share/logstash/ingest_data/*dhcp.json"
  }  
}

filter { 
	mutate {
		rename => ["bytes", "network.bytes"]
		rename => ["bytes_in", "server.bytes"]
		rename => ["bytes_out", "client.bytes"]
		rename => ["chaddr", "dhcp.client.mac"]
		rename => ["ciaddr", "dhcp.client.ip"]
		rename => ["date_zone", "event.timezone"]
		rename => ["dest_ip", "destination.ip"]
		rename => ["dest_mac", "destination.mac"]
		rename => ["dest_port", "destination.port"]
		rename => ["dns_server", "dhcp.offer.dns"]
		rename => ["endtime", "botes.network.session.end"]
		rename => ["eventtype", "event.category"]
		rename => ["giaddr", "dhcp.relay.ip"]
		rename => ["host", "dhcp.server.hostname"]
		rename => ["ip_lease_time", "dhcp.client.lease"]
		rename => ["opcode", "dhcp.message"]
		rename => ["protocol", "network.protocol"]
		rename => ["message", "event.original"]
		rename => ["router", "dhcp.offer.gateway"]
		rename => ["siaddr", "dhcp.bootstrap.server.ip"]
		rename => ["src_ip", "source.ip"]
		rename => ["src_mac", "source.mac"]
		rename => ["src_port", "source.port"]
		rename => ["subnetmask", "dhcp.offer.subnetmask"]
		rename => ["time", "event.created"]
		rename => ["transaction_id", "dhcp.transaction.id"]
		rename => ["transport", "network.transport"]
		rename => ["yiaddr", "dhcp.offer.ip"]
	}
} 

output {  
  elasticsearch {
    index => "botes-dhcp-%{+YYYY.MM.dd}"
    hosts => "${ELASTIC_HOSTS}"
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"
    cacert => "certs/ca/ca.crt"
  } 
}